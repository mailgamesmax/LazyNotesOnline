// <auto-generated />
using System;
using LazyNotesOnline;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LazyNotesOnline.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231114130321_beSure1")]
    partial class beSure1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LazyNotesOnline.Models.NoteCategory", b =>
                {
                    b.Property<Guid>("Cat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cat_Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Įrašo kategorija");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Cat_Id");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LazyNotesOnline.Models.NoteContent", b =>
                {
                    b.Property<Guid>("Content_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Cat_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Turinys");

                    b.Property<DateTime>("ContentCreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NoteContentContent_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Content_Id");

                    b.HasIndex("Cat_Id");

                    b.HasIndex("NoteContentContent_Id");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("LazyNotesOnline.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NickName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LazyNotesOnline.Models.NoteCategory", b =>
                {
                    b.HasOne("LazyNotesOnline.Models.User", "User")
                        .WithMany("UserNoteCategories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LazyNotesOnline.Models.NoteContent", b =>
                {
                    b.HasOne("LazyNotesOnline.Models.NoteCategory", "NoteCategory")
                        .WithMany("NoteContents")
                        .HasForeignKey("Cat_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LazyNotesOnline.Models.NoteContent", null)
                        .WithMany("AllNotes")
                        .HasForeignKey("NoteContentContent_Id");

                    b.Navigation("NoteCategory");
                });

            modelBuilder.Entity("LazyNotesOnline.Models.NoteCategory", b =>
                {
                    b.Navigation("NoteContents");
                });

            modelBuilder.Entity("LazyNotesOnline.Models.NoteContent", b =>
                {
                    b.Navigation("AllNotes");
                });

            modelBuilder.Entity("LazyNotesOnline.Models.User", b =>
                {
                    b.Navigation("UserNoteCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
